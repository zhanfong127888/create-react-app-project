<wxs src="../util.wxs" module="util" />
<!-- 下列操作为每个子项包装进一个view容器
  并为该容器补全干净的属性，避免小程序冗长的属性设置，当然这样的操作会牺牲一点点性能
  补全的属性为 style class data-id data-treeid及view属性对应的事件 touch tap longpress的冒泡及非冒泡事件
  touch > longtap > tap -->
<block wx:if="{{item.text}}">
  <text 
    class="{{item.itemClass||''}}"
    style="{{item.itemStyle||''}}"
    id="{{item.id||''}}" 
    data-treeid="{{item && util.isObject(item.attr) && (item.attr['data-treeid']||item.attr['treeid']||'')}}"
    data-id="{{(item && util.isObject(item.attr) && (item.attr['id'] || item.attr['data-id']) || '')}}"
    selectable="{{item.selectable||''}}"
    space="{{item.space||''}}"
    decode="{{item.decode||''}}"
  >{{item.text}}</text>
</block>
<block wx:elif="{{util.hasEvent(item, 'url')}}">
  <include src="../partments/events/normal.wxml" />
</block>
<block wx:elif="{{item._tap || item._aim || item._longpress || item._catchlongpress || item.touchstart || item.catchtouchstart || item.touchmove || item.catchtouchmove || item.touchend || item.catchtouchend}}">
  <include src="../partments/events/touch.wxml" />
</block>
<!-- <block wx:elif="{{util.hasEvent(item, 'longtap') || util.hasEvent(item, 'longpress') || util.hasEvent(item, 'catchlongtap') || util.hasEvent(item, 'catchlongpress')}}"> -->
<block wx:elif="{{item.longtap||item.longpress||item.catchlongtap||item.catchlongpress}}">
  <include src="../partments/events/longtap.wxml" />
</block>
<block wx:elif="{{item.tap || item.catchtap}}">
  <include src="../partments/events/tap.wxml" />
</block>
<block wx:else>
  <include src="../partments/events/normal.wxml" />
</block>